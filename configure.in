dnl ##
dnl ## Process this file with autoconf to produce a configure script.
dnl ## 
AC_PREREQ([2.68])
AC_INIT([ANU Nilpotent Quotient Program], [2.3], [support@gap-system.org], [nq])

AC_CONFIG_AUX_DIR(cnf)

AC_CONFIG_HEADER(src/config.h:src/config.hin)

dnl ##
dnl ## C is the language 
dnl ##
AC_LANG_C

dnl ##
dnl ## determine the system name
dnl ##
AC_CANONICAL_SYSTEM

dnl ##
dnl ## Checks for programs.
dnl ##
AC_PROG_AWK
AC_PROG_CC
AC_PROG_MAKE_SET

dnl ##
dnl ## Checks for system header files.
dnl ##
AC_CHECK_HEADERS([stdlib.h string.h sys/time.h])

dnl ##
dnl ## Locate the GAP root dir & determine which GAP configuration to use
dnl ##
dnl ## If no directory is specified, then this defaults to ../..
# TODO: Automatically expand relative paths to absolute ones... this would simplify the code below
# considerably. Also, it's a first step towards building out-of-tree
AC_ARG_WITH([gap-root],
	[AS_HELP_STRING([--with-gap-root=PATH],
		[directory where GAP is installed @<:@default=../..@:>@])],
	[GAP_ROOT="$with_gap_root" ; GAP_ROOT_real="$with_gap_root"; GAP_ROOT_display="$with_gap_root"],
	[GAP_ROOT='${top_srcdir}/../..' ; GAP_ROOT_real="${srcdir}/../.."; GAP_ROOT_display=../..])
AC_MSG_CHECKING([path to GAP installation])
if test -d $GAP_ROOT_real ; then
	AC_MSG_RESULT([$GAP_ROOT_display])
else
	AC_MSG_ERROR([$GAP_ROOT_display is not a directory])
fi
AC_SUBST(GAP_ROOT)

dnl ##
dnl ## Determine which GAP configuration to use
dnl ##
AC_ARG_WITH([gap-config],
	[AS_HELP_STRING([--with-gap-config=CONFIGNAME],
		[which GAP configuration to use @<:@default=currently active@:>@])],
	[GAP_CONFIG="$with_gap_config"],
	[GAP_CONFIG=""])

AC_MSG_CHECKING([which GAP configuration to use])
if test x$GAP_CONFIG = x ; then
	SYSINFO_GAP="$GAP_ROOT_real/sysinfo.gap"
	if test -f $SYSINFO_GAP ; then
		AC_MSG_RESULT([currently active configuration])
	else
		AC_MSG_ERROR([sysinfo.gap not found])
	fi
else
	SYSINFO_GAP="$GAP_ROOT_real/sysinfo.gap-$GAP_CONFIG"
	if test -f $SYSINFO_GAP ; then
		AC_MSG_RESULT([$GAP_CONFIG])
	else
		AC_MSG_ERROR([sysinfo.gap-$GAP_CONFIG not found])
	fi
fi
AC_SUBST(GAP_CONFIG)

dnl ##
dnl ## Parse the GAParch from sysinfo.gap
dnl ##

AC_MSG_CHECKING([for active GAP architecture])
GAP_ARCH=`fgrep "GAParch=" $SYSINFO_GAP | sed -e 's/^GAParch=\(.*\)$/\1/'`
if test x$GAP_ARCH = x ; then
	AC_MSG_ERROR([GAParch not found in $GAP_ROOT_display/sysinfo.gap])
else
	AC_MSG_RESULT([$GAP_ARCH])
fi
AC_SUBST(GAP_ARCH)

dnl ##
dnl ## Check for GMP
dnl ##

GMP_LDFLAGS=
GMP_CPPFLAGS=
gmp_prefix=
have_gmp=yes

AC_ARG_WITH([gmp-prefix], 
	[AS_HELP_STRING([--with-gmp-prefix=PATH],
		[directory where GMP library is installed])],
	[ GMP_LDFLAGS="-L$with_gmp_prefix/lib $GMP_LDFLAGS" ; GMP_CPPFLAGS="-I$with_gmp_prefix/include $GMP_CPPFLAGS" ],
	[])

nq_save_CPPFLAGS="$CPPFLAGS"
CPPFLAGS="$CPPFLAGS $GMP_CPPFLAGS"
nq_save_LDFLAGS="$LDFLAGS"
LDFLAGS="$LDFLAGS $GMP_LDFLAGS"

AC_CHECK_HEADER( [gmp.h],
	[
	AC_CHECK_LIB( [gmp], [__gmpz_init],
		[
		# TODO: Display GMP version ?
		],
		[ AC_MSG_ERROR([Could not locate the GMP library libgmp.]) ]
		)

	],
	[ AC_MSG_ERROR([Could not locate the GMP include file gmp.h.]) ]
	)

# TODO: If we can't find GMP so far, then try again in GAPDIR/bin/GAPARCH/extern/gmp/

CPPFLAGS="$nq_save_CPPFLAGS"
LDFLAGS="$nq_save_LDFLAGS"

GMP_LIBS="$GMP_LDFLAGS -lgmp"

AC_SUBST(GMP_CPPFLAGS)
AC_SUBST(GMP_LIBS)


dnl ##
dnl ## Checks for typedefs, structures, and compiler characteristics.
dnl ##
AC_TYPE_LONG_LONG_INT

dnl ##
dnl ## Checks for library functions.
dnl ##
AC_FUNC_MALLOC
AC_FUNC_REALLOC
AC_CHECK_FUNCS([sbrk getrusage])

AC_CONFIG_FILES([Makefile doc/Makefile examples/Makefile src/Makefile])
AC_OUTPUT
